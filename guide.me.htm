<html>
    <head>
        <title>
            guide.me
        </title>
        <style type="text/css">
            html, body {
                width:100%;
                height:100%;
                margin:0;
                padding:0;
            }
            body {
                text-align:center;
            }
            canvas {
                max-width:85%;
                max-height:85%;
                margin:8px 0;
            }
            td {
                padding:0 8px;
                text-align:center;
            }
        </style>
        <script type="text/javascript">
            Math.PHI = (1+Math.sqrt(5))/2;
        
            const framepresets = [
                { name:"Square", w:1, h:1 },
                { name:"2:1", w:2, h:1 },
                { name:"3:2", w:3, h:2 },
                { name:"4:3", w:4, h:3 },
                { name:"5:4", w:5, h:4 },
                { name:"Golden ratio", w:Math.PHI, h:1 },
                { name:"16:9", w:16, h:9 },
                { name:"16:10", w:16, h:10 },
                { name:"2.39:1", w:2.39, h:1 },
            ];
        
            var guides = [
                function innercircle(ctx) {
                    const min = Math.min(ctx.framewidth, ctx.frameheight);
                    const centerX = ctx.frameleft+ctx.framewidth/2;
                    const centerY = ctx.frametop+ctx.frameheight/2;
                    ctx.beginPath();
                    ctx.arc(centerX, centerY, min/2, 0, Math.PI*2, false);
                    ctx.closePath();
                    ctx.stroke();
                    drawinnerframe(ctx, 1, 1);
                    drawinnerframe(ctx, 3, 2);
                    drawinnerframe(ctx, 16, 9);
                    drawinnerframe(ctx, 2.39, 1);
                },
                function thirds_v(ctx) {
                    ortholine(ctx, 1/3, "green", true);
                    ortholine(ctx, 2/3, "green", true);
                },
                function thirds_h(ctx) {
                    ortholine(ctx, 1/3, "green", false);
                    ortholine(ctx, 2/3, "green", false);
                },
                function center_v(ctx) {
                    ortholine(ctx, 1/2, "red", true);
                },
                function center_h(ctx) {
                    ortholine(ctx, 1/2, "red", false);
                },
                function diagonals(ctx) {
                    line(ctx, ctx.frameleft, ctx.frametop, ctx.frameleft + ctx.framewidth, ctx.frametop + ctx.frameheight, "red");
                    line(ctx, ctx.frameleft + ctx.framewidth, ctx.frametop, ctx.frameleft, ctx.frametop + ctx.frameheight, "red");
                },
                function diagonals6(ctx) {
                    line(ctx, ctx.frameleft + ctx.framewidth * 1 / 6, ctx.frametop, ctx.frameleft + ctx.framewidth, ctx.frametop + ctx.frameheight * 5 / 6, "red");
                    line(ctx, ctx.frameleft, ctx.frametop + ctx.frameheight * 1 / 6, ctx.frameleft + ctx.framewidth * 5 / 6, ctx.frametop + ctx.frameheight, "red");
                    line(ctx, ctx.frameleft + ctx.framewidth * 5 / 6, ctx.frametop, ctx.frameleft, ctx.frametop + ctx.frameheight * 5 / 6, "red");
                    line(ctx, ctx.frameleft + ctx.framewidth, ctx.frametop + ctx.frameheight * 1 / 6, ctx.frameleft + ctx.framewidth * 1 / 6, ctx.frametop + ctx.frameheight, "red");
                },
                function diagonals45(ctx) {
                    const min = Math.min(ctx.framewidth, ctx.frameheight);
                    line(ctx, ctx.frameleft, ctx.frametop, ctx.frameleft + min, ctx.frametop + min, "orange");
                    line(ctx, ctx.frameleft + ctx.framewidth, ctx.frametop + ctx.frameheight, ctx.frameleft + ctx.framewidth - min, ctx.frametop + ctx.frameheight - min, "orange");
                    line(ctx, ctx.frameleft + ctx.framewidth, ctx.frametop, ctx.frameleft + ctx.framewidth - min, ctx.frametop + min, "orange");
                    line(ctx, ctx.frameleft, ctx.frametop + ctx.frameheight, ctx.frameleft + min, ctx.frametop + ctx.frameheight - min, "orange");
                },
                function golden_v(ctx) {
                    const invphi = 2 / ( 1 + Math.sqrt(5) );
                    ortholine(ctx, invphi, "blue", true);
                    ortholine(ctx, 1-invphi, "blue", true);
                },
                function golden_h(ctx) {
                    const invphi = 2 / ( 1 + Math.sqrt(5) );
                    ortholine(ctx, invphi, "blue", false);
                    ortholine(ctx, 1-invphi, "blue", false);
                }                
            ];
            
            function line(ctx, x1, y1, x2, y2, c) {
                ctx.beginPath();
                ctx.moveTo(x1, y1);
                ctx.lineTo(x2, y2);
                ctx.strokeStyle = c;
                ctx.closePath();
                ctx.stroke();
            }
            
            function ortholine(ctx, ratio, c, vertical) {
                if ( vertical ) {
                    line(ctx, ctx.frameleft+ctx.framewidth*ratio, ctx.frametop, ctx.frameleft+ctx.framewidth*ratio, ctx.frametop+ctx.frameheight, c);
                } else {
                    line(ctx, ctx.frameleft, ctx.frametop+ctx.frameheight*ratio, ctx.frameleft+ctx.framewidth, ctx.frametop+ctx.frameheight*ratio, c);
                }
            }
            
            function drawinnerframe(ctx, w, h) {
                var innerratio = w / h;
                var frameratio = ctx.framewidth / ctx.frameheight;
                if ( frameratio > innerratio ) {
                    var ratiodiff = ( innerratio / frameratio ) / 2;
                    ortholine(ctx, 0.5 - ratiodiff, "violet", true);
                    ortholine(ctx, 0.5 + ratiodiff, "violet", true);
                } else if ( frameratio < innerratio ) {
                    var ratiodiff = ( frameratio / innerratio ) / 2;
                    ortholine(ctx, 0.5 - ratiodiff, "violet", false);
                    ortholine(ctx, 0.5 + ratiodiff, "violet", false);
                }
            }
            
            function drawCanvasRatio(w,h) {
                drawCanvas(Math.atan(w/h)/2/Math.PI*360);
            }
            
            function drawCanvasCustom() {
                var res = window.prompt("Please insert either a ratio in the form \"W:H\" or an angle in degrees.");
                if (!res)
                    return;
                var angle = /([0-9]*([.,][0-9]+)?)°?/.exec(res);
                var ratio = /([0-9]*([.,][0-9]+)?):([0-9]*([.,][0-9]+)?)/.exec(res);
                if (ratio != null) // user entered a ratio
                    drawCanvasRatio(ratio[1], ratio[3]);
                else if (angle != null) // user entered an angle
                    drawCanvas(angle[1]);
            }
            
            function drawCanvas(diagonalAngle) {
                var canvas = document.getElementById("canvas");
                canvas.width = canvas.width;
                var ctx = canvas.getContext('2d'); 
                var width = canvas.width;
                var height = canvas.height;

                var diagonalAngleRad = diagonalAngle / 180 * Math.PI ;

                var frameratio = Math.tan( diagonalAngleRad );
                var canvasratio = width / height;
                var diameter = ctx.diameter = Math.min(width, height) - 2;
                var framewidth = ctx.framewidth = diameter * Math.sin( diagonalAngleRad );
                var frameheight = ctx.frameheight = diameter * Math.cos( diagonalAngleRad );
                var frametop = ctx.frametop = (height - frameheight) / 2;
                var frameleft = ctx.frameleft = (width - framewidth) / 2;
                
                ctx.strokeStyle = "black";
                ctx.lineWidth = 0.25;
                ctx.beginPath();
                ctx.arc(width/2, height/2, Math.sqrt(framewidth*framewidth/4+frameheight*frameheight/4), 0, Math.PI*2, false);
                ctx.closePath();
                ctx.stroke();
                
                for (i in guides)
                    guides[i](ctx);
                    
                ctx.strokeStyle = "black";
                ctx.strokeRect(frameleft,frametop,framewidth,frameheight); 
                
                document.getElementById("infodiagonalangle").innerHTML = Math.round(diagonalAngle*1000)/1000 + "deg";
                if (frameratio > 1)
                    document.getElementById("infoframeratio").innerHTML = Math.round(frameratio*1000)/1000 + ":1";
                else
                    document.getElementById("infoframeratio").innerHTML = "1:" + Math.round(1/frameratio*1000)/1000;
            }
            
            function saveCanvas() {
                var canvas = document.getElementById("canvas");
                var dataURL = canvas.toDataURL();
                window.open(dataURL, "_blank");
            }
            
            window.addEventListener("load", function() {
                /*document.getElementById("diagonalangle").addEventListener("change", function(e) {
                    drawCanvas(document.getElementById("diagonalangle").value);
                },false);*/
                var canvas = document.getElementById("canvas");
                canvas.addEventListener("mousemove", function(e) {
                    var relPos = ( e.clientX - canvas.offsetLeft ) / canvas.offsetWidth;
                    drawCanvas(/*document.getElementById("diagonalangle").value = */Math.abs( 0.5 - relPos ) * 90 * 2 );
                },false);
            },false);
        </script>
    </head>
    <body>
        <canvas id="canvas" width="1024" height="1024"></canvas>
        <!--<input type="range" min="0" max="90" id="diagonalangle"/>-->
        <table id="info" align="center">
            <tr>
                <td>Diagonal angle</td>
                <td>Frame ratio</td>
                <td>Legend</td>
                <td>Presets</td>
                <td>Actions</td>
            </tr>
            <tr>
                <td id="infodiagonalangle"/>
                <td id="infoframeratio"/>
                <td><span style="color:red">Diagonals and halves</span> <span style="color:green">Thirds</span> <span style="color:blue">Golden ratio</span> <span style="color:orange">45deg diagonals</span></td>
                <td>
                    <a href="javascript:drawCanvasRatio(1,1)">Square</a>
                    <a href="javascript:drawCanvasRatio(5,4)">5:4</a>
                    <a href="javascript:drawCanvasRatio(4,3)">4:3</a>
                    <a href="javascript:drawCanvasRatio(3,2)">3:2</a>
                    <a href="javascript:drawCanvasRatio(16,10)">16:10</a>
                    <a href="javascript:drawCanvasRatio((1+Math.sqrt(5))/2,1)">Golden ratio</a>
                    <a href="javascript:drawCanvasRatio(16,9)">16:9</a>
                    <a href="javascript:drawCanvasRatio(2,1)">2:1</a>
                    <a href="javascript:drawCanvasRatio(2.39,1)">2.39:1</a>
                    <a href="javascript:drawCanvasCustom()">Custom...</a>
                </td>
                <td>
                    <a href="javascript:saveCanvas()">Save image...</a>
                </td>
            </tr>
        </table>
    </body>
</html>